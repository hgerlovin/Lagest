% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/HessDerivFun.R
\name{CTfun.h}
\alias{CTfun.h}
\alias{CTfun.k}
\alias{CTfun2.k}
\alias{CTfun2.h}
\alias{C1fn.k}
\alias{C1fn.k12}
\alias{C1fn.h12}
\alias{C2fn.k}
\alias{C2fn.h}
\alias{C2fn.k1}
\alias{C2fn.h1}
\alias{C2fn.k2}
\alias{C2fn.h2}
\alias{C3fn.k}
\alias{C3fn.h}
\alias{C3fn.k1}
\alias{C3fn.h1}
\alias{C3fn.k2}
\alias{C3fn.h2}
\alias{C3fn.k1k2}
\alias{C3fn.h1h2}
\title{Hessian-derivation functions}
\usage{
CTfun.h(thalf = NULL, k = NULL, dat)

CTfun.k(thalf = NULL, k = NULL, dat)

CTfun2.k(thalf = NULL, k = NULL, dat)

CTfun2.h(thalf = NULL, k = NULL, dat)

C1fn.k(d, s, e, k)

C1fn.k12(d, s, e, k1, k2)

C1fn.h12(d, s, e, h1, h2)

C2fn.k(d, s, e, k)

C2fn.h(d, s, e, h)

C2fn.k1(d, s, e, k1, k2)

C2fn.h1(d, s, e, h1, h2)

C2fn.k2(d, s, e, k1, k2)

C2fn.h2(d, s, e, h1, h2)

C3fn.k(d, s, e, k)

C3fn.h(d, s, e, h)

C3fn.k1(d, s, e, k1, k2)

C3fn.h1(d, s, e, h1, h2)

C3fn.k2(d, s, e, k1, k2)

C3fn.h2(d, s, e, h1, h2)

C3fn.k1k2(d, s, e, k1, k2)

C3fn.h1h2(d, s, e, h1, h2)
}
\arguments{
\item{thalf}{Assumed half-life for the OPEE calculation. Default is NULL. For the two parameter model, thalf must be input as a two-value vector with the incline half-life listed first.}

\item{k, k1, k2}{decay-rate parameterizations for single, incline and decline half-lives, respectively}

\item{dat}{Dataset with three columns per exposure event/regimen following the naming conventions for X total regimens: Dose1--DoseX, tStart1--tStartX, tEnd1--tEndX}

\item{d}{dose/concentration value DoseX}

\item{s}{time since start tStartX}

\item{e}{time since end tEndX}

\item{h1}{half-life parameters for incline and decline, respectively}

\item{h2}{half-life parameters for incline and decline, respectively}

\item{h}{half-life parameter for OPEE calculation}
}
\value{
Outputs vectors for the first and second derivatives with respect to the parameters of interest.
}
\description{
Functions here are for calculating the first and second derivatives for the 1 and 2 lag parameter Effective Exposure. Used in the half-life finding algorithms to compute SE.
}
