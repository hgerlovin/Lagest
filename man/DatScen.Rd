% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/DatSpecs.R
\name{DatScen}
\alias{DatScen}
\alias{DatSpec}
\alias{DatSpec2}
\title{Simulate single-scenario dataset}
\usage{
DatScen(scendat = Scen1, repper = 10000, seedno = 25)

DatSpec(repper = 10000, half = 90, st.dose = 1, baser = 0.1, OR = 1.5,
  struct = 0, Cp.vec = c(1), ts.vec = c(0), tf.vec = c(900),
  intlen = 1, studyt = NULL, seedno = 25)

DatSpec2(repper = 10000, half = c(50, 100), st.dose = 1, baser = 0.1,
  OR = 1.5, struct = 0, Cp.vec = c(1), ts.vec = c(0), tf.vec = c(900),
  intlen = 1, studyt = NULL, seedno = 25)
}
\arguments{
\item{scendat}{Pre-defined scenario to use for simulating subjects (only in DatScen() function). Default assumes that a Scen1 dataframe exists and should be used.}

\item{repper}{Total number of subjects to simulate. Default is 10,000 subjects.}

\item{seedno}{Random number generator seed specification for simulating event vs. probability matrix. Default is 25.}

\item{half}{Half-life parameter(s) for simulating the relative concentration/effective exposure, currC. Default assumes a single 90 time-unit half-life for the one-parameter model and the combination of 50, 100 for incline and decline time-units in the two-parameter system.}

\item{st.dose}{Relative units for dose plateau. Default assumes binary exposure.}

\item{baser}{Overall prevalence input. Parameter feeds into the intercept beta via \eqn{log(baser*(intlen/studyt))}. This beta is then used to calculate the subject-time-specific conditional logistic probability = \eqn{exp(beta0 + beta1*currC)/(1 + exp(beta0 + beta1*currC))}. Default is 10\% prevalence of the outcome throughout the course of the study follow-up.}

\item{OR}{Proportional Odds/Hazard Ratio. Parameter feeds into the beta1 via \eqn{log(OR/st.dose)}. This beta is then used to calculate the subject-time-specific conditional logistic probability = \eqn{exp(beta0 + beta1*currC)/(1 + exp(beta0 + beta1*currC))}. Default assumes that steady state full exposure increases the odds of event 50\%.}

\item{struct}{Structure indicator. If turned on (1), then additional regimen is added for time following discontinuation. Default is off (0), assuming that the total number of regimens is fixed and does not need additional follow-up.}

\item{Cp.vec}{Vector of doses for the regimens. Default assumes the binary exposure plateau and that there is a single regimen of exposure (i.e. \code{Cp.vec=c(1)}). To have multiple exposures, include the same number of vector components in \code{Cp.vec}, \code{ts.vec}, and \code{tf.vec}.}

\item{ts.vec}{Vector of start times for the regimens. Default assumes the exposure was started at time 0.}

\item{tf.vec}{Vector of end times for the regimens. Default assumes the exposure continues through time=900. When \code{studyt} is not specified, the last specified end-time (last regimen) is used as the total study time.}

\item{intlen}{Increment time to use. Default is 1 time unit.}

\item{studyt}{Total study follow-up time. Default is \code{NULL} and will pull the last regimen stop time.}
}
\value{
Dataframe with subject-time-incremented observations/rows.

Columns taken directly from the pre-simulated scenario trajectory include the input parameter values (st.dose, intlen), values for time, currD, everD, and the true effective exposure (currC).

Additional columns created for event, subject ID, and scenario number. Three columns per regimen reflect the exposure-specific dose, time since start, and time since end for each subject-time-specific observation: DoseX, tStartX, tEndX.

Each subject will only have one row per time unit up until the first event - iterative comparison of random draw (Unif(0,1)) to conditional logistic probability starts at time 0.

Specifics regarding the output dataframe columns (colNames):
\describe{
   \item{Dose1...DoseX}{Columns indicating the overall doses for each regimen. Repeated throughout for computational ease.}
   \item{tStart1...tStartX}{Columns indicating the time since starting the specific regimen -- depends on the point in the trajectory. i.e. Takes a value of 0 for times prior to initiation and increments parallel with time following initiation.}
   \item{tEnd1...tEndX}{Columns indicating the time since discontinuing the specific regimen -- depends on the point in the trajectory. i.e. Takes a value of 0 for times prior to start of regimen and while regimen is "on". Increments parallel to time following discontinuation.}
   \item{time}{Column for the study time at the observation.}
   \item{currD}{Column with value for the current regimen dose for the subject-time-specific observation.}
   \item{everD}{Column indicating whether any exposure has occurred as of (prior to and including) the subject-time-specific observation.}
   \item{currC}{Column with "true" effective exposure at the given time.}
   \item{st.dose}{Input standard dose value, repeated down the column for all time-points.}
   \item{intlen}{Input time increment value, repeated down the column for all time-points.}
   \item{event}{Column taking value of 1 for subject-time-specific events and 0 otherwise.}
   \item{ID}{Subject identifier. For DatScen() -Increments from 1 to input value "repper". Dataframe sorted by ID and then time. For MultiScen() - Increments from 1 to total(nperscen). If one value is used for input to "nperscen", such as 5000, the IDs for subjects in scenario 1 will range from 1 to 5000, scenario 2 from 5001 to 10000, and scenario 3 from 10001 to 15000. For nperscen=c(5000,5000,2000), the IDs for scenario 3 would range from 10001 to 12000. Dataframe sorted by ID and then time.}
   \item{scen.num}{Scenario number. Not particularly useful in output from DatScen(). For MultiScen() only - Subjects generated in the order of the scenario specification -- this means that changing the order in "combo" would alter the RNG matrix comparisons.}
}
}
\description{
Generate simulated datasets based on single scenario specification. Can use either one-parameter or two-parameter effective exposure models.
}
\section{Functions}{
\itemize{
\item \code{DatScen}: Assumes a pre-generated scenario dataframe that feeds into the "scendat" value. Underlying dataframe can come from either OPEE- or TPEE-generated scenarios.

\item \code{DatSpec}: To input the OPEE scenario specifics from which to generate a random sample. Uses ScenSpec() to generate the underlying scenario. Not recommended - please pre-generate scenarios and use either DatScen or MultiScen functions instead.

\item \code{DatSpec2}: To input the TPEE scenario specifics from which to generate a random sample. Uses ScenSpec2() to generate the underlying scenario. Not recommended - please pre-generate scenarios and use either DatScen or MultiScen functions instead.
}}

\seealso{
ScenSpec, ScenSpec2, MultiScen
}
